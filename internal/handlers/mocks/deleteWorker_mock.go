// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/VladSnap/shortener/internal/handlers (interfaces: DeleterWorker)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	services "github.com/VladSnap/shortener/internal/services"
	gomock "github.com/golang/mock/gomock"
)

// MockDeleterWorker is a mock of DeleterWorker interface.
type MockDeleterWorker struct {
	ctrl     *gomock.Controller
	recorder *MockDeleterWorkerMockRecorder
}

// MockDeleterWorkerMockRecorder is the mock recorder for MockDeleterWorker.
type MockDeleterWorkerMockRecorder struct {
	mock *MockDeleterWorker
}

// NewMockDeleterWorker creates a new mock instance.
func NewMockDeleterWorker(ctrl *gomock.Controller) *MockDeleterWorker {
	mock := &MockDeleterWorker{ctrl: ctrl}
	mock.recorder = &MockDeleterWorkerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeleterWorker) EXPECT() *MockDeleterWorkerMockRecorder {
	return m.recorder
}

// AddToDelete mocks base method.
func (m *MockDeleterWorker) AddToDelete(arg0 chan services.DeleteShortID) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddToDelete", arg0)
}

// AddToDelete indicates an expected call of AddToDelete.
func (mr *MockDeleterWorkerMockRecorder) AddToDelete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddToDelete", reflect.TypeOf((*MockDeleterWorker)(nil).AddToDelete), arg0)
}

// Close mocks base method.
func (m *MockDeleterWorker) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockDeleterWorkerMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockDeleterWorker)(nil).Close))
}

// RunWork mocks base method.
func (m *MockDeleterWorker) RunWork() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RunWork")
}

// RunWork indicates an expected call of RunWork.
func (mr *MockDeleterWorkerMockRecorder) RunWork() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunWork", reflect.TypeOf((*MockDeleterWorker)(nil).RunWork))
}
