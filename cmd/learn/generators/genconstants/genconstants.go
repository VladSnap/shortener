package main

//go:generate go run genconstants.go "gen" "Version" "1.2.3" "Name" "myapp" "Title" "My Application"

import (
	"fmt"
	"go/format"
	"os"
	"strings"
)

func main() {
	fmt.Println("gen runned")
	fmt.Println(os.Args[0])
	fileName := os.Args[1]

	var sb strings.Builder

	sb.WriteString("// Code generated by go generate; DO NOT EDIT.\n")
	sb.WriteString("// This file was generated by \n")
	sb.WriteString("\n")
	sb.WriteString("package main\n")
	sb.WriteString("\n")
	sb.WriteString("const (\n")

	for i := 2; i < len(os.Args); i += 2 {
		vname := os.Args[i]
		vvalue := os.Args[i+1]
		sb.WriteString(fmt.Sprintf("    %s = %q\n", vname, vvalue))
	}
	sb.WriteString(") \n")

	fmt.Println("---")
	fmt.Println(sb.String())
	fmt.Println("---")
	generated := []byte(sb.String())
	formatted, err := format.Source(generated)
	if err != nil {
		panic(err)
	}

	const perm = os.FileMode(0o666)
	err = os.WriteFile(fileName+".go", formatted, perm)
	if err != nil {
		panic(err)
	}
}
